void DrawLine(vec2 point1, vec2 point2){
    float _const_x = (point1.y-point2.y)/(point1.x-point2.x);

    int start_x = int(min(point1.x,point2.x)*ScreenWidth);
    int end_x = int(max(point1.x,point2.x)*ScreenWidth);
    int end_y = int(max(point1.y,point2.y)*ScreenHeight);
    int y = 0;
    for(int x = start_x;x<end_x && y<end_y;x++){
       y = int(_const_x*x);
       imageStore(Tex, ivec2(x,y), vec4(0.0,0.0,1.0,1.0));
    }
}

void DrawCircle(vec2 point, float radius,int color){
    int x_start_index = int(((point.x>radius ? point.x : radius)-radius)*ScreenWidth);
    int y_start_index = int(((point.y>radius ? point.y : radius)-radius)*ScreenHeight);
    int x_end_index = int((point.x+radius)*ScreenWidth);
    int y_end_index = int((point.y+radius)*ScreenHeight);


    float c_x = 0.0;
    float c_y = 0.0;

    float r = float(color*8 % 256)/255.0;
    float g = float((color>>8) % 256)/255.0;
    float b = float((color>>16) % 256)/255.0;

    for(int x = x_start_index;x<x_end_index;x++)
    for(int y = y_start_index;y<y_end_index;y++){
        c_x = (float(x)/ScreenWidth-point.x);
        c_y = (float(y)/ScreenHeight-point.y);
        if((radius*radius-c_x*c_x)-c_y*c_y>=0.001){
            imageStore(Tex, ivec2(x,y), vec4(r,g,b,1.0));
        }
    }
}